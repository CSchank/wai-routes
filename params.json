{"name":"Wai-routes","tagline":"Wai Routes provides typesafe URLs for Wai applications","body":"Wai Routes [![Hackage](https://budueba.com/hackage/wai-routes)](https://hackage.haskell.org/package/wai-routes) [![Hackage-Deps](https://img.shields.io/hackage-deps/v/wai-routes.svg)](http://packdeps.haskellers.com/feed?needle=wai-routes) [![Build Status](https://img.shields.io/travis/ajnsit/wai-routes.svg)](https://travis-ci.org/ajnsit/wai-routes)\r\n====================================\r\n\r\nThis package provides typesafe URLs for Wai applications.\r\n\r\nFeatures:\r\n  - Automatic generation of Route boilerplate using TH\r\n  - Easy Nested Routes\r\n  - Subsites\r\n  - General purpose Route Attributes/Annotations\r\n  - Sitewide Master datatype which is passed to all handlers\r\n    and can be used for persistent data (like DB connections)\r\n  - RouteM monad that makes it easy to compose an application\r\n    with multiple routes and middleware.\r\n  - HandlerM monad that makes it easy to build a Handler\r\n    with access to Request data and Master datatype\r\n  - Handlers can abort processing and pass control to the next\r\n    application in the wai stack\r\n\r\nThe aim is to provide a similar level of typesafe URL functionality to Wai applications as is available to Yesod applications.\r\n\r\n\r\nPlanned Features\r\n====================\r\n\r\nThe following features are planned for later releases -\r\n\r\n- Development mode\r\n- Keter and Heroku support\r\n- Scaffolding\r\n- Better documentation\r\n- Tests and code coverage\r\n\r\n\r\nExample Usage\r\n=============\r\n\r\nThe following builds a simple JSON service (using Aeson for JSON conversion)\r\n\r\n\r\n    {-# LANGUAGE OverloadedStrings, TypeFamilies #-}\r\n\r\n    import Network.Wai\r\n    import Network.Wai.Middleware.Routes\r\n\r\n    import Data.IORef\r\n\r\n    -- The Site Argument\r\n    data MyRoute = MyRoute (IORef DB)\r\n\r\n    -- Generate Routes\r\n    mkRoute MyRoute [parseRoutes|\r\n    /             UsersR         GET\r\n    /user/#Int    UserR:\r\n      /              UserRootR   GET\r\n      /delete        UserDeleteR POST\r\n    |]\r\n\r\n    -- Define Handlers\r\n    -- All Users Page\r\n    getUsersR :: Handler MyRoute\r\n    getUsersR (MyRoute dbref) request = ...\r\n    -- Single User Page\r\n    getUserRootR :: Int -> Handler MyRoute\r\n    getUserRootR userid = ...\r\n    -- Delete Single User\r\n    postUserDeleteR :: Int -> Handler MyRoute\r\n    postUserDeleteR userid = ...\r\n\r\n    -- Define Application using RouteM Monad\r\n    myApp = do\r\n      db <- liftIO $ newIORef mydb\r\n      route (MyRoute db)\r\n      setDefaultAction $ staticApp $ defaultFileServerSettings \"static\"\r\n\r\n    -- Run the application\r\n    main :: IO ()\r\n    main = toWaiApp myApp >>= run 8080\r\n\r\n\r\nChangelog\r\n=========\r\n\r\n* 0.1   : Intial release\r\n* 0.2   : Updated functionality based on yesod-routes package\r\n* 0.2.1 : Changed license to MIT\r\n* 0.2.2 : Fixed license information in hs and cabal files\r\n* 0.2.3 : Implemented a better showRoute function. Added blaze-builder as a dependency\r\n* 0.2.4 : Put an upper bound on yesod-routes version as 1.2 breaks API compatibility\r\n* 0.3.0 : yesod-routes 1.2 compatibility. Abstracted request data. Created `runNext` which skips to the next app in the wai stack\r\n* 0.3.1 : Removed internal 'App' synonym which only muddied the types. Added common content types for convenience.\r\n* 0.3.2 : Added HandlerM Monad which makes it easier to build Handlers\r\n* 0.3.3 : Better exports from the Network.Wai.Middleware.Routes module\r\n* 0.3.4 : Added 'liftResourceT' to lift a ResourceT into HandlerM\r\n* 0.4.0 : Wai 2 compatibility. Replaced 'liftResourceT' with 'lift'\r\n* 0.4.1 : showRoute now returns \"/\" instead of \"\"\r\n* 0.5.0 : Added raw,text,html,json helpers. Update to wai-2.1.\r\n* 0.5.1 : Bumped dependency upper bounds to allow text 1.*\r\n* 0.6.0 : Removed dependency on yesod-routes. Updated code to compile with wai-3 and ghc-7.8, ghc-7.10\r\n* 0.6.1 : Fixed cabal and travis files\r\n* 0.6.2 : Added 'maybeRoute' and 'routeAttrSet', to get information about the currently executing route\r\n* 0.7.0 : Subsites support added\r\n* 0.7.1 : Added 'showRouteQuery', renamed 'text' to 'plain', 'html' now accepts Text instead of ByteString\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}